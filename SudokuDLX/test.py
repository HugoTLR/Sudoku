from SudokuDLX import *
from DancingLinks import *
from SolutionHandler import *
# example =  [[0,0,1,0,1,1,0],
#             [1,0,0,1,0,0,1],
#             [0,1,1,0,0,1,0],
#             [1,0,0,1,0,0,0],
#             [0,1,0,0,0,0,1],
#             [0,0,0,1,1,0,1]]

# dlx = DancingLinks(example)
# dlx.run()
board = [[0,2,0,0,7,0,5,6,0],\
    [5,0,7,9,3,2,0,8,0],\
    [0,0,0,0,0,1,0,0,0],\
    [0,1,0,2,4,0,0,5,0],\
    [3,0,8,0,0,0,4,0,2],\
    [0,7,0,0,8,5,0,1,0],\
    [0,0,0,7,0,0,0,0,0],\
    [0,8,0,4,2,3,7,0,1],\
    [0,3,4,0,1,0,0,2,8]]
#HARDEST
board = [[8,0,0,0,0,0,0,0,0],\
        [0,0,3,6,0,0,0,0,0],\
        [0,7,0,0,9,0,2,0,0],\
        [0,5,0,0,0,7,0,0,0],\
        [0,0,0,0,4,5,7,0,0],\
        [0,0,0,1,0,0,0,3,0],\
        [0,0,1,0,0,0,0,6,8],\
        [0,0,8,5,0,0,0,1,0],\
        [0,9,0,0,0,0,4,0,0]]

#12 SEcs to solve, find a better algs
board = [[0,8,0,0,0,7,0,0,9],\
    [1,0,0,0,0,0,6,0,0],\
    [0,0,0,3,0,0,0,8,0],\
    [0,0,2,0,3,0,0,0,7],\
    [0,0,0,2,1,4,0,0,0],\
    [5,0,0,0,9,0,4,0,0],\
    [0,5,0,0,0,3,0,0,0],\
    [0,0,4,0,0,0,0,0,3],\
    [6,0,0,1,0,0,0,2,0]]
      


s = SudokuDLX()
s.solve(board)
# print(cover)
# cover = s.sudoku_exact_cover()
# dlx = DancingLinks(cover, SudokuHandler(9))
# dlx.run()
# dlx.run()